train{
    expname = nmr_multi_3_infer
    dataset_class =datasets.multi_scene_dataset.MultiSceneDataset
    model_class = model.network_multi_scene.VolSDFNetwork
    loss_class = model.loss.VolSDFLoss
    learning_rate = 1e-5 # lower learning rate made it work in the first place
    num_pixels = 512 # lowering this speeds up training while maintaining quality
    checkpoint_freq = 1
    plot_freq = 1 # put this very low because single epoch takes a long time on larger dataset
    split_n_pixels = 2
}
val{
    dataset_class = datasets.multi_scene_dataset.MultiSceneDataset
    learning_rate = 1e-5
    num_pixels = 1024
    optim_steps_inference = 100
}
plot{
    plot_nimgs = 1
    resolution = 100
    grid_boundary = [-1.5, 1.5]
}
loss{
    eikonal_weight = 0.1
    rgb_loss = torch.nn.L1Loss
}
dataset{
    data_dir = NMR_planes/train3 # created slightly larger datasets, see data folder
    img_res = [64, 64]
    scan_ids = [] # empty list means: use everything that is in data_dir
}
val_dataset{
    data_dir = NMR_planes/val10
    img_res = [64, 64]
    scan_ids = []
}
model{
    modeldir = ../exps/nmr_multi_3/2024_07_22_00_18_08/ 
    z_vector_size = 128 # TODO: play around with this again in the end when training on lots of data
    scene_bounding_sphere = 3.0
    white_bkgd = True
    # number of scenes is automatically calculated in volsdf_train_multi_scene.py
    implicit_network
    {
        d_in = 3
        d_out = 4
        dims = [ 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256]
        geometric_init = True
        bias = 0.6
        skip_in = [4, 8] # introduced skip connections again, slightly improved results
        weight_norm = True
        multires = 6
        sphere_scale = 20.0
    }
    rendering_network
    {
        mode = idr
        d_in = 9
        d_out = 3
        dims = [ 256, 256, 256, 256]
        weight_norm = True
        multires_view = 4
    }
    density
    {
        params_init{
            beta = 0.1
        }
        beta_min = 0.0001
    }
    ray_sampler
    {
        near = 0.0
        N_samples = 64
        N_samples_eval = 128
        N_samples_extra = 32
        eps = 0.1
        beta_iters = 10
        max_total_iters = 5
        add_tiny = 1e-8 # necessary to avoid NaNs caused by division by 0, value is 0 per default!
    }
}
